# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push: 
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest
    - name: Build coverage report
      run: |
        coverage report tests/test_db.py 
    - name: Login to image repository
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.DOCKER_USER}}
        password: ${{ secrets.DOCKER_PASSWORD }}  
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
    - name: Build and push
      uses: docker/build-push-action@v3
      with:
        context: .
        push: true
        tags: ${{ env.REGISTRY }}/devops21-23/devops_cicd_final:latest
        labels: ${{ steps.meta.outputs.lables }}
- name: Start minikube

uses: medyagh/setup-minikube@master

with:

run: |

kubectl create secret docker-registry regcred --docker-server=ghcr.io --docker-username=${{ secrets.DOCKER_USER }} --docker-password=${{ secrets.DOCKER_PASSWORD }} --docker-email=fariddevops22@gmail.com

- name: Deploy to minikube

run:

kubectl apply -f .github/workflows/create_pod.yaml

- name: Try the cluster!

run: kubectl get pods -A

- name: Test service

run: |

kubectl expose pod devops-cicd-final --selector "app=devops-cicd-final" --type=LoadBalancer --port=5000

kubectl get services devops-cicd-final

minikube service devops-cicd-final
